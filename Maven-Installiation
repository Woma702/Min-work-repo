sudo hostname maven
cd /opt
sudo yum install wget nano tree unzip git-all -y
sudo yum install java-11-openjdk-devel java-1.8.0-openjdk-devel -y
java -version
git --version


#Step1) Download the Maven Software
sudo wget https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.zip
sudo unzip apache-maven-3.8.5-bin.zip
sudo rm -rf apache-maven-3.8.5-bin.zip
sudo mv apache-maven-3.8.5/ maven


vi ~/.bash_profile  # and add the lines below

export M2_HOME=/opt/maven
export PATH=$PATH:$M2_HOME/bin

.#Step4) Refresh the profile file and Verify if maven is running

source ~/.bash_profile
mvn -version


================================================================================================================================================


Maven Deployment 

sudo hostname maven
cd /opt
sudo yum install wget nano tree unzip git-all -y
sudo yum install java-11-openjdk-devel java-1.8.0-openjdk-devel -y
java -version
git --version


#Step1) Download the Maven Software
sudo wget https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.zip
sudo unzip apache-maven-3.8.5-bin.zip
sudo rm -rf apache-maven-3.8.5-bin.zip
sudo mv apache-maven-3.8.5/ maven


vi ~/.bash_profile  # and add the lines below

export M2_HOME=/opt/maven
export PATH=$PATH:$M2_HOME/bin

.#Step4) Refresh the profile file and Verify if maven is running

source ~/.bash_profile
mvn -version



[ec2-user@maven opt]$ sudo rm -rf apache-maven-3.8.5-bin.zip
[ec2-user@maven opt]$ sudo mv apache-maven-3.8.5/ maven
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ ls
maven
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ ll
total 0
drwxr-xr-x. 6 root root 99 Mar  5 11:30 maven
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ vi ~/.bash_profile
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ source ~/.bashrc
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ mvn
-bash: mvn: command not found
[ec2-user@maven opt]$
[ec2-user@maven opt]$ cd
[ec2-user@maven ~]$
[ec2-user@maven ~]$
[ec2-user@maven ~]$ cd -
/opt
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ source .bash_profile
-bash: .bash_profile: No such file or directory
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ source .bash_profile
-bash: .bash_profile: No such file or directory
[ec2-user@maven opt]$ cd
[ec2-user@maven ~]$
[ec2-user@maven ~]$
[ec2-user@maven ~]$ source .bash_profile
[ec2-user@maven ~]$
[ec2-user@maven ~]$
[ec2-user@maven ~]$
[ec2-user@maven ~]$ mvn
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  0.083 s
[INFO] Finished at: 2022-03-28T03:10:28Z
[INFO] ------------------------------------------------------------------------
[ERROR] No goals have been specified for this build. You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy. -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/NoGoalSpecifiedException
[ec2-user@maven ~]$ cd -
/opt
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ mvn
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  0.074 s
[INFO] Finished at: 2022-03-28T03:10:45Z
[INFO] ------------------------------------------------------------------------
[ERROR] No goals have been specified for this build. You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy. -> [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/NoGoalSpecifiedException
[ec2-user@maven opt]$ ls
maven
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ cd maven/
[ec2-user@maven maven]$
[ec2-user@maven maven]$
[ec2-user@maven maven]$ ls
bin  boot  conf  lib  LICENSE  NOTICE  README.txt
[ec2-user@maven maven]$
[ec2-user@maven maven]$
[ec2-user@maven maven]$ ls -lrt
total 36
-rw-r--r--. 1 root root  2612 Mar  5 11:30 README.txt
-rw-r--r--. 1 root root  5141 Mar  5 11:30 NOTICE
-rw-r--r--. 1 root root 17568 Mar  5 11:30 LICENSE
drwxr-xr-x. 4 root root  4096 Mar  5 11:30 lib
drwxr-xr-x. 3 root root    63 Mar  5 11:30 conf
drwxr-xr-x. 2 root root    76 Mar  5 11:30 boot
drwxr-xr-x. 2 root root    97 Mar  5 11:30 bin
[ec2-user@maven maven]$
[ec2-user@maven maven]$
[ec2-user@maven maven]$ cd ..
[ec2-user@maven opt]$ ll
total 0
drwxr-xr-x. 6 root root 99 Mar  5 11:30 maven
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ ls maven/
bin  boot  conf  lib  LICENSE  NOTICE  README.txt
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ ll maven/
total 36
drwxr-xr-x. 2 root root    97 Mar  5 11:30 bin
drwxr-xr-x. 2 root root    76 Mar  5 11:30 boot
drwxr-xr-x. 3 root root    63 Mar  5 11:30 conf
drwxr-xr-x. 4 root root  4096 Mar  5 11:30 lib
-rw-r--r--. 1 root root 17568 Mar  5 11:30 LICENSE
-rw-r--r--. 1 root root  5141 Mar  5 11:30 NOTICE
-rw-r--r--. 1 root root  2612 Mar  5 11:30 README.txt
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ ll maven/bin
total 32
-rw-r--r--. 1 root root  228 Mar  5 11:30 m2.conf
-rwxr-xr-x. 1 root root 5790 Mar  5 11:30 mvn
-rw-r--r--. 1 root root 6223 Mar  5 11:30 mvn.cmd
-rwxr-xr-x. 1 root root 1601 Mar  5 11:30 mvnDebug
-rw-r--r--. 1 root root 2082 Mar  5 11:30 mvnDebug.cmd
-rwxr-xr-x. 1 root root 1532 Mar  5 11:30 mvnyjp
[ec2-user@maven opt]$
[ec2-user@maven opt]$
[ec2-user@maven opt]$ cd
[ec2-user@maven ~]$
[ec2-user@maven ~]$
[ec2-user@maven ~]$ mkdir java-project
[ec2-user@maven ~]$
[ec2-user@maven ~]$
[ec2-user@maven ~]$ cd java-project/
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$ ls
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$ git clone https://github.com/Woma702/maven-standalone-application
Cloning into 'maven-standalone-application'...
remote: Enumerating objects: 80, done.
remote: Counting objects: 100% (80/80), done.
remote: Compressing objects: 100% (43/43), done.
remote: Total 80 (delta 7), reused 30 (delta 0), pack-reused 0
Unpacking objects: 100% (80/80), 14.09 KiB | 901.00 KiB/s, done.
[ec2-user@maven java-project]$ ls
maven-standalone-application
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$ tree
.
└── maven-standalone-application
    ├── pom.xml
    ├── src
    │   ├── main
    │   │   └── java
    │   │       └── com
    │   │           └── mt
    │   │               └── sample
    │   │                   └── HelloWorld.java
    │   └── test
    │       └── java
    │           └── com
    │               └── mt
    │                   └── sample
    │                       └── test
    │                           └── HelloWorldTest.java
    └── target
        ├── classes
        │   └── com
        │       └── mt
        │           └── sample
        │               └── HelloWorld.class
        ├── maven-archiver
        │   └── pom.properties
        ├── maven-stanalone-application-0.0.1-SNAPSHOT.jar
        ├── maven-status
        │   └── maven-compiler-plugin
        │       ├── compile
        │       │   └── default-compile
        │       │       ├── createdFiles.lst
        │       │       └── inputFiles.lst
        │       └── testCompile
        │           └── default-testCompile
        │               ├── createdFiles.lst
        │               └── inputFiles.lst
        ├── surefire-reports
        │   ├── com.mt.sample.test.HelloWorldTest.txt
        │   └── TEST-com.mt.sample.test.HelloWorldTest.xml
        └── test-classes
            └── com
                └── mt
                    └── sample
                        └── test
                            └── HelloWorldTest.class

31 directories, 13 files
[ec2-user@maven java-project]$ ls maven-standalone-application/
pom.xml  src  target
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$ cd maven-standalone-application/
[ec2-user@maven maven-standalone-application]$ ls
pom.xml  src  target
[ec2-user@maven maven-standalone-application]$ rm - rf target/
rm: cannot remove '-': No such file or directory
rm: cannot remove 'rf': No such file or directory
rm: cannot remove 'target/': Is a directory
[ec2-user@maven maven-standalone-application]$ rm  -rf target/
[ec2-user@maven maven-standalone-application]$
[ec2-user@maven maven-standalone-application]$
[ec2-user@maven maven-standalone-application]$ ls
pom.xml  src
[ec2-user@maven maven-standalone-application]$ ls src/
main  test
[ec2-user@maven maven-standalone-application]$
[ec2-user@maven maven-standalone-application]$
[ec2-user@maven maven-standalone-application]$




[ec2-user@maven java-project]$ git clone https://github.com/Woma702/maven-web-apps
Cloning into 'maven-web-apps'...
remote: Enumerating objects: 100, done.
remote: Counting objects: 100% (28/28), done.
remote: Compressing objects: 100% (20/20), done.
remote: Total 100 (delta 22), reused 8 (delta 8), pack-reused 72
Receiving objects: 100% (100/100), 525.48 KiB | 35.03 MiB/s, done.
Resolving deltas: 100% (28/28), done.
[ec2-user@maven java-project]$ ls
maven-standalone-application  maven-web-apps
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$
[ec2-user@maven java-project]$ cd maven-web-apps/
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$ ls
Dockerfile  Jenkinsfile  pom.xml  src  testing.py
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$ rm Dockerfile Jenkinsfile testing.py
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$ ls
pom.xml  src
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$ mvn package

[ec2-user@maven maven-web-apps]$ ls
pom.xml  src  target
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$ ls target/
classes            maven-archiver  maven-web-app
generated-sources  maven-status    maven-web-app.war
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$
[ec2-user@maven maven-web-apps]$ hostname -i
172.31.89.161
[ec2-user@maven maven-web-apps]$




Deployment 

Maven ip copy the private ip for maven private ip 172.31.20.67  public ip 34.229.171.47
Tomcat private ip 172.31.88.213  public ip 3.88.135.55

scp target/app.war   ec2-user@172.31.85.245:/opt/tomcat9/webapps 

scp -i key.pem target/*war ec2-user@172.31.88.213:/opt/tomcat9/webapps/

 

we have to creat a key file 

vi key.pem 

you will get permision denied when trying to deploy 
you will give permision to chmod 400

chmod 400 key.pem 










  
